TranslateMessage( &nMsg )
{
    if( nMsg.message != WM_KEYDOWN )
        return....;
    通过nMsg.wParam（虚拟键码值）可以获知是否为可见字符的
    按键被按下
    if( 不是 )
        return...;
    if( 是 )
    {
       判断CapsLock（大写锁定键）是否处于打开状态
       if(打开)
       {
           PostMessage( nMsg.hwnd, WM_CHAR, 0x41,....);
       }else{
           PostMessage( nMsg.hwnd, WM_CHAR, 0x61,...);
       }
    }
}




BOOL Ellipse(
  HDC hdc,        // dc句柄（BeginPaint的返回值）
  int nLeftRect,  // 左上角X坐标
  int nTopRect,   // 左上角Y坐标
  int nRightRect, //右下角X坐标
  int nBottomRect // 右下角Y坐标
);
//获取窗口的边界信息
BOOL GetClientRect(
  HWND hWnd,      // 窗口句柄
  LPRECT lpRect   // 返回窗口边界信息
);
例如：  RECT rc = { 0 };
            GetClientRect( hWnd, &rc );


BOOL AppendMenu(
	HMENU hMenu, //菜单句柄
	UINT uFlags, //菜单项风格
	UINT uIDNewItem, //菜单项ID或下拉菜单句柄
	LPCTSTR lpNewItem //菜单项的名称
);
uFlags:
    MF_POPUP - 具有这种风格的菜单项，被点击后弹出下拉菜单
                         uIDNewItem参数必须设置下拉菜单的句柄
    MF_SEPARATOR - 具有这种风格的菜单项，为分隔线
    MF_STRING - 具有这种风格的菜单项，被点击后能够发出消息
                          WM_COMMAND













