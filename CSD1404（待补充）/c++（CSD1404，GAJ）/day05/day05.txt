一.成员指针
   1.1 指向成员的指针,分为成员变量指针 和成员
       函数指针.
   1.2 成员变量指针
       struct  Date{
           int  year;
	   int  month;
	   int  day;
       };
       /* 定义成员指针 */
       int Date::*pm;
       /* 成员指针赋值 */
       pm=&Date::year; 
       pm=&Date::month;
       /* 取值  */
       Date  date={2014,10,1};
       date.*pm;
       Date  *date = new Date();
       date->*pm;
   1.3 成员变量指针的本质
       就是记录了 指针在对象中地址偏离量
   1.4 成员函数指针 
       class  Date{
           int  year;
	   int  month;
	   int  day;
	   public:
	   Date(int year=2014,int month=10,
	   int day=1):year(year),month(month),
	   day(day){  
	   
	   }
	   int   getYear(){
	       return year;
	   }
	   int   getMonth(){
	       return month;
	   }
       };
      成员函数指针语法：
      /* 定义成员函数指针 */
      int   (Date::*pmfun)();
      /* 赋值 */
      pmfun=&Date::getYear;
      /* 调用 */
      Date  date(2014,7,10);
      (date.*pmfun)();
      Date  *date2=new Date(2015,10,1);
      (date2->*pmfun)();

二. 运算符重载 (就是一种函数的特殊表现形式)
    2.1 目的
        为了方便编程  和 程序的清晰 
    2.2 描述一个分数类   
        特征:
	    分子   
	    分母
        功能:
	    显示分数 

        在全局区设计一个函数 可以完成两个分数
	的相加。
   2.3 二元运算符重载规则
       fa + fb
       fa # fb
       先去fa对应的类型中找一个成员函数叫
       operator#(fb)
       找不到 则去全局区 找一个全局函数叫
       operator#(fa,fb)
   2.4 使用友元 打破访问限制 
       friend  函数     访问类的私有成员
       静态成员函数     访问类的私有成员 
                         受权限限制 
       成员函数         访问类的私有成员
                         受权限限制
			 必须通过对象调用 
   2.5 写一个整数的包装类   
       (以类的方式操作整数 )

   2.6 输入输出运算符重载 
       Integer   ia(100);
       cout << ia << endl;

       cout << ia;
       先去cout对象对应的类型 找一个成员函数
          operator<<(ia)
       找不到 就去全局找一个全局函数
          operator<<(cout,ia)
        
	/* 流对象不能加const修饰 不能复制 */
        void  operator<<(ostream& os,
	    const Integer& ia);	
   

三.一元运算符 
   !   ~   -  ++  --
   默认的规则
   !a
   ~a
   -a
   ++a
   --a
    
   #a  先去a对象 对应的类型中 找一个成员函数
       operator#();
   如果没有 则去全局找一个全局函数 叫
       operator#(a);
四.运算符重载的限制 
   4.1 不是所有的运算符都能重载 
      ::   作用域运算符  
      .    成员访问运算符
      .*   成员指针操作符
      sizeof 求类型大小
      typeid 取得类型信息的运算符
      ？ :   三目运算符
   4.2 不能对基本类型进行运算符重载
      运算符重载时 操作数至少有一个是类类型
   4.3 只能对已有的运算符重载 不能发明
      a**b  
   4.4 不能改变运算符的特性 
      a%b
   4.5 有些运算符 只能以成员形式重载 
      =   最好是成员 -= += *= ....
     []

     ()   

     ->    *

五.只能是成员形式的运算符
   5.1 =  []
   Array  arra;   自定义数组 
   arra[0] 
   Array  arrb;
   arrb=arra;


作业:  
写一个分数类  实现分数的输入 输出 
   实现 *  和 *= 
   实现 前  --   和 后--


