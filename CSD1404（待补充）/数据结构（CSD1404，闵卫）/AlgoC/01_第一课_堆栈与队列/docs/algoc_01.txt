==================
第一课  堆栈与队列
==================

一、数据结构的基本概念
----------------------

1. 逻辑结构
~~~~~~~~~~~

1) 集合结构(集)：结构中的数据元素除了“属于同一个集合”之外，没有任何关系。

2) 线性结构(表)：结构中的数据元素具有一对一的前后关系。

3) 树型结构(树)：结构中的数据元素具有一对多的父子关系。

4) 网状结构(图)：结构中的数据元素具有多对多的交叉映射关系。

2. 物理结构
~~~~~~~~~~~

1) 顺序结构：结构中的数据元素存放在一段连续的地址空间中。

随机访问方便，空间利用率低，插入删除不便。

2) 链式结构：结构中的数据元素存放在彼此独立的地址空间中，每个独立的空间被称为节点，节点除了保存数据以外，还保存另一个或几个相关节点的地址。

空间利用率高，插入删除方便，随机访问不便。

3. 逻辑结构与物理结构关系
~~~~~~~~~~~~~~~~~~~~~~~~~

+------+------+--------+------+
|      |  表  |   树   |  图  |
+------+------+--------+------+
| 顺序 | 数组 | 顺序树 |      |
+------+------+--------+ 复合 |
| 链式 | 链表 | 链式树 |      |
+------+------+--------+------+

二、数据结构的基本运算
----------------------

1. 创建/销毁
2. 插入/删除
3. 获取/修改
4. 排序/查找

三、数据结构的基本实现
----------------------

1. 堆栈
~~~~~~~

1) 基本特征：后进先出。

2) 基本操作：压入(push)、弹出(pop)。

3) 实现要点：初始化空间、栈顶指针、判空判满。

范例：

基于数组的实现 - sa.h、sa.c、sa_test.c
基于链表的实现 - sl.h、sl.c、sl_test.c
老鼠走迷宫     - sl.h、sl.c、maze.c

2. 队列
~~~~~~~

1) 基本特征：先进先出――FIFO。

2) 基本操作：压入(push)、弹出(pop)。

3) 实现要点：初始化空间、前指针front弹出后指针rear压入、循环使用、判空判满。

范例：

基于数组的实现 - qa.h、qa.c、qa_test.c
基于链表的实现 - ql.h、ql.c、ql_test.c
基于堆栈的实现 - sl.h、qs.h、sl.c、qs.c、qs_test.c

综合运用堆栈和队列：

逆波兰法求解四则运算表达式 - sl.h、ql.h、rpn.h、sl.c、ql.c、rpn.c、rpn_test.c