cp命令可以把文件从一个地方拷贝到另外
    一个地方
cp 路径1 路径2
路径1代表一个已经存在的文件，路径2表示
    一个还不存在的文件

mv命令可以把文件从一个地方转移到另外
    一个地方
mv命令的使用方法和cp命令一样

Linux系统中链接文件用来代表另外一个文件
ln命令可以用来建立链接文件
ln命令的使用方法和cp，mv一样
这种方法建立的链接文件叫硬链接文件，
    他们可以不依赖原文件而使用
使用-s选项可以创建软链接文件
软链接文件必须依赖原文件

程序用来表示文件系统中的文件
文件内部的数据不会自动随着时间变化

计算机把文件中的数据转移到内存中
    得到一组新数据，这组数据叫进程
内存中的数据随时发生变化，进程的
    概念不单指内存中的数据同时
    还包括这些数据的变化规律

进程中的数据是根据程序中的数据得到的

有时候也把进程叫做程序

操作系统为每个进程分配一个整数作为
    ID，操作系统通过ID区分不同的进程

ps命令可以查看终端窗口中的所有进程
使用-aux选项可以查看系统中所有进程

kill命令可以用来结束一个进程，需要在
    命令中提供要结束进程的ID
使用-9选项可以强制结束一个进程
对于占住终端窗口的进程可以使用ctrl+c
    组合键结束它
    
在命令中可以通过使用输出重定向把命令
    的结果保存在文件中
在命令的后面加>和文件路径就可以把
    命令的执行结果记录在路径对应
    的文件中
这种方法会先把文件中的所有内容删除
可以使用>>代替>实现输出重定向，这样
    会保留文件中原有内容

使用通配符可以编写代表多个文件或文件夹
    的路径
?是一个通配符，可以用来代表任意的单个
    字符
*也是一个通配符，可以用来代表任意多个
    任意字符

C语言中要求把大多数想法记录在以.c作为
    扩展名的文件中，这种文件叫做源
    文件

C语言中可以直接进行加减乘除计算，采用
    的符号分别是（+,-,*,/）
C语言中每一个独立的处理步骤最后都应该
    用;结束，这叫做一条语句

C语言中采用分组方式管理所有的语句
分组可以在多个层次上进行
C语言中绝大多数语句必须属于一个分组
C语言中采用大括号把分组中的所有语句
    包括起来
语句不可以跨越大括号

不被其他大括号包含的大括号叫做顶级
    大括号
顶级大括号有很多用途，其中一个重要
    用途是作为函数使用

C语言中要求为每个函数起个名字，不同
    函数的名字不同。通过名字区分
    不同的函数
每个C语言程序中必须有一个叫做main的
    函数，这个函数叫做主函数。任何
    程序从主函数里的第一条语句开始
    执行，当最后一条语句结束后整个
    程序结束。
C语言中每个函数完成所有工作后可以
    把一个数字指定成它的工作结果，
    这个数字叫做这个函数的返回值
需要使用专门语句指定返回值数值
C语言中预先保留了几十个英文单词，
    他们叫做关键字。每个关键字
    有特定的用途，不可以随便乱用。
return就是一个关键字，它有两个作用。
    主要作用是结束函数的执行，辅助
    作用是指定返回值的数值
主函数把0作为返回值数值使用表示
    程序正常结束
C语言中把只有数值区别的数字归为一组，
    把他们叫做一个数据类型。
C语言中有很多种数据类型
整数类型中包含了所有不带小数点的数字，
    整数类型使用int表示。
C语言中所有数字必须有类型
C语言中把所有不带小数点的数字默认当成
    整数类型看待
数字跨越函数边界时有可能发生类型的
    改变，因此函数必须指出返回值
    在函数外部的类型。
在函数名称前写数据类型名称表示返回值
    在函数外部的类型

把使用c语言格式编写好的源文件翻译成
    计算机能认识格式的过程叫编译
可以完成编译工作的工具叫编译器
gcc就是Linux系统中的C语言编译器

C语言程序开发的基本步骤
1.使用vi编写以.c作为扩展名的源文件
2.使用gcc编译源文件得到a.out文件
3.使用命令./a.out把文件a.out当命令使用

MinGW是Windows操作系统下的gcc

预处理指令是一种特殊的语句，它们以
    #做开头，不是以;做结尾
预处理指令可以用来改变.c源文件中的
    内容
#include是一个预处理指令，它可以把
    一个以.h作为扩展名的文件内容
    合并到当前源文件中
这个预处理指令中需要使用相对路径指定
    .h头文件的位置
使用<>包含文件路径表示采用系统中预先
    规定好目录作为相对路径的起点
使用""包含文件路径表示先采用源文件所
    在目录作为相对路径的起点

gcc编译过程
1.首先处理所有预处理指令
2.把预处理后的结果翻译成计算机认识的
    格式（编译）
3.把程序中不同部分连起来（链接）

gcc的选项
-E        只完成预处理工作
-c        只完成预处理和编译工作，
          得到以.o作为扩展名的目标
          文件
-o        可以用来指定生成新文件的
          名称
-std=c89/-std=c99
          指定编译过程所遵循的C语言
          规范版本。默认采用c89规范

可以在程序中加入说明性的文字信息，必须
    加入到叫做注释的范围内
如果一行中有//则它后面的部分都是注释，
    这种注释叫单行注释
程序中从/*开始到*/结尾中间的部分也是
    注释，这种注释叫多行注释
编译器编译的时候会自动忽略所有注释

C语言中大量使用名字区分不同的内容
所有名字统称为标识符
标识符通常使用英文单词编写（汉语拼音）
标识符的命名规则
1.第一个字符可以是英文字母或_（不可以
   是阿拉伯数字字符）
2.后面的字符可以是英文字母，_或
    阿拉伯数字字符
3.标识符是大小写敏感的
4.关键字不可以当标识符使用
5.标识符的长度没有限制（c89中
    截取前31字符，c99中截取前
    63个字符）

C语言程序的书写规范
1.一行里最多包含一条语句
2.不同层次的语句应该使用缩进区分
3.在合适的地方使用空格和空行提高程序
    的可读性
4.标识符应该采用驼峰方式或下划线方式
    书写

C语言提供了一组标准函数，每个标准
    函数可以用来解决一个通用问题
每个标准函数有自己的名字
为了使用一个标准函数需要编写专门的
    语句（函数调用语句）

printf标准函数可以把程序中的数字打印在
    终端窗口里
为了使用printf标准函数需要把stdio.h
    文件的内容合并到源文件中
可以采用占位符打印编写程序时未知的
    数字
每种类型的数字有专门的占位符
%d是和整数类型数字配对的占位符
语句中可以使用多个占位符，每个占位符
    必须有对应的数字。所有数字按照
    从前到后的顺序替换占位符。

计算机内存中包括大量的存储区，每个
    存储区可以记录一个数字
C语言中提供了变量，一个变量对应了一个
    存储区。可以通过使用变量间接的
    使用存储区。
一个存储区只能用来存储一个类型的数据
变量也是分类型的
变量对应存储区的位置由计算机决定
变量声明语句用来声明一个变量（此后就
    可以通过变量使用对应的存储区了）
所有变量都必须要先声明然后才能使用
变量声明语句包含变量名称和变量类型名称

赋值语句可以向存储区中放一个数据
赋值语句以赋值操作符（=）为核心
赋值操作符左边应该代表一个存储区（
    左值），右边应该代表一个数字
赋值语句可以把右边的数字放在左边的
    存储区中

可以直接在程序中把存储区当数字使用

***变量名称直接代表存储区，间接代表
   存储区里的数字。

可以在一条语句中声明多个同类型的变量

可以在声明变量的时候立刻使用赋值语句
    把数字放到存储区中，这叫做变量的
    初始化

在C语言中所有变量都应该初始化

变量可以用来代表一个固定的未知数字

预习：
    1.变量
    2.scanf标准函数
    3.操作符

作业：
    1.设计一组砝码，要求可以使用这组
    砝码表示1克到127克之间的所有整数
    重量。任何两个砝码的重量不能一样，
    砝码的数量越少越好。




