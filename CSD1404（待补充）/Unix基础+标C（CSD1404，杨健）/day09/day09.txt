程序中对所有语句进行分组管理
C语言中可以把很多语句划分成多个
   函数，每个函数包含一组语句
C语言程序一定是由一个或多个函数
    构成的
每个函数有一个自己的名字，不同
    函数的名字不能一样
每个程序必须有一个叫做main的函数，
    这个函数叫主函数
在程序运行过程中不同函数之间需要
    互相合作
函数之间的一次合作叫做一次函数调用
函数之间的调用是有时间范围的，超过
    范围后调用关系就没有了
任何一次函数调用一定是在两个函数
    之间发生的
在函数调用过程中主动发起调用的函数
    叫调用函数，被动接受的函数叫
		被调用函数
绝大多数函数调用过程中伴随着双向
    的数据传递
为了实现函数调用过程中的数据传递，
    被调用函数需要提供两组存储区，
		每组存储区用来满足一个方向
		数据传递的需要

从被调用函数向调用函数传递的数值
    叫做被调用函数的返回值
任何被调用函数的返回值只能是一个
    数值
返回值也可以用来指记录返回值数据
    的存储区
在被调用函数中使用return关键字向
    这个存储区中存储数据
只有调用函数才能从这个存储区中
    获得数字，方法是把函数调用
		语句当数字使用。
函数名称前用数据类型名称表示存储
    返回值的存储区的类型，如果
		没有这个存储区应该写void
如果函数名称前没有数据类型名称
    则编译器自动给函数提供一个
		int类型的存储区
返回值存储区的类型不可以是数组类型
如果没有使用return关键字对返回值
    存储区进行赋值则存储区内容
		不确定
如果返回值数值和存储区类型不一致
    则数据会发生变化

exit标准函数可以立刻结束整个程序
需要包含stdlib.h文件

从调用函数传递到被调用函数中的数值
    叫做参数
参数的个数和类型任意
被调用函数提供的用来存储参数数据的
    存储区叫形式参数
调用函数用来提供参数数值的东西叫
    实际参数
形式参数一定是存储区而实际参数不一定	
实际参数和形式参数是同样数值的不同
     表示方式，它们一定是有区别的
实际参数一定出现在形式参数之前
形式参数是由被调用函数提供的，它只能
    在被调用函数执行期间使用
形式参数列表中不同形参声明语句用,
		分开，每个形式参数必须单独
		写数据类型
空的形式参数列表代表任意多个任意类型
    的形式参数，void作为形式参数列表
		表示没有形式参数

数组可以作为函数的形式参数使用
数组做形式参数时只包含一个存储区，这个
    存储区可以作为数组使用，可以在
		它后面使用下标表示数组中任何
		一个存储区。
声明数组形参时可以省略存储区个数
数组形参的名称代表一个存储区，这个存储区
    是真正的形式参数，它可以作为数组
		使用
数组名称可以作为实际参数和数组类型
    形式参数配对使用
*****数组形参中包含的所有存储区一定不是
    被调用函数提供的
当使用数组做形式参数的时候必须有另外
    一个形式参数表示数组中存储区的个数
因为数组形参中所包含的存储区在两个函数
    之间共用，所以可以利用他们实现任意
		方向的数据传递。这种形式参数叫输入
		输出参数，只能实现单方向数据传递
		的形式参数叫输入参数。

如果编译器在编译时先看到函数调用语句
    则会采用函数的隐式声明猜测函数的
		格式。
函数的隐式声明中认为返回值存储区是
    int类型的，形式参数的个数和类型
		任意。

函数的隐式声明不可靠，尽量避免使用
    隐式声明
函数分为两部分，大括号里面叫函数体，
    大括号前面叫函数声明。
把函数声明作为一条独立的语句写在文件
    开头叫做函数的显式声明，这样可以
		避免隐式声明。
主函数不需要显式声明的

可以调用自己的函数叫递归函数

预习：
    1.递归函数
		2.文件操作相关函数

作业：
    1.编写程序在屏幕上打印如下内容
		1 X 9 = 9
		2 X 8 = 16
		3 X 7 = 21
		4 X 6 = 24
		5 X 5 = 25
		每行应该使用一个函数调用语句打印
		函数的数量越少越好
	  2.编写递归函数完成从1到用户给定
		某个正整数之间所有整数的求和计算





