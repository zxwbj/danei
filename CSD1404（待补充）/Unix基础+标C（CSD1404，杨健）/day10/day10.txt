当一个问题本身很复杂，无法直接找到
    答案时，如果这个问题可以拆分
		成几个小问题，其中至少有一个
		小问题和原来的大问题本质上一样
		只不过简单一点，这时可以考虑
		采用递归函数解决这个问题。

编写递归函数的过程
1.在函数中用语句描述出问题的
    拆分方法
2.在函数的开头编写分支处理不能
    拆分的简单情况(这个分支中
		必须能立刻结束函数)

使用递归函数解决问题的思路叫递归
使用循环解决同样问题的思路叫递推

文件操作相关函数包括
1.fopen函数用于打开一个文件
2.fclose函数用于关闭一个文件
3.fread/fwrite函数用来在存储区和
    文件之间转移数据

计算机中所有文件都记录二进制数位
有一类文件记录的是字符ASCII码的二进制
    数位,这种文件叫做文本文件
除了文本文件以外的文件叫二进制文件

fread和fwrite函数以二进制的方式操作文件

fopen函数需要两个实际参数，前一个实际
    参数表示文件的路径，后一个实际
		参数表示打开文件的方式（可以对文件
		做什么操作）
fopen函数有可能失败，把返回值当布尔值
    使用，如果是真则表示成功否则表示
		失败
只有打开成功后才可以对文件做其他操作

每当结束对一个文件的所有操作后都必须
   使用fclose函数关闭这个文件（需要
	 使用fopen的返回值做为实际参数）

常见的文件打开方式
"r"    :     只能察看文件内容，只能
             从文件头开始察看，要求
						 文件事先已经存在
"r+"   :     比上一个方式多了修改能力
"w"    :     只能修改文件内容，只能
             从文件头开始修改，如果
						 文件还不存在则创建新文件
						 如果文件已经存在则删除
						 文件内容
"w+"   :     比上一个方式多了察看能力
"a"    :     和w的唯一区别是不会修改
             原有文件的内容而是会在
						 后面追加新内容
"a+"   :     比上一个方式多了察看能力

"b"也是一种打开方式，它可以和上面的
     任何一种混合使用
"b"表示以二进制方式操作文件内容

fread函数可以把文件中的数据拷贝到
    内存存储区中
fwrite函数可以把内存存储区中的数据
    拷贝到文件中
他们都需要四个实际参数，这些参数
    的顺序和类型都一样
参数一应该是一个存储区的地址（通常
    使用数组名称），代表这次数据
		拷贝过程中内存里的起点地址
参数二表示一次最少拷贝多少个字节的数据
    （一个存储区中包含的字节个数）
参数三表示一共希望拷贝多少个存储区的
    数据
参数四表示要操作的文件

返回值表示实际拷贝的存储区个数

程序中的每个变量都是有主人的，变量
    的主人是包含它的那个大括号某
		一次的运行过程。如果这个大括号
		在程序中多次运行则每次运行
		是一个新主人，每个主人有一个
		自己的变量
如果一个变量不属于任何大括号则它的
    主人是整个程序运行过程
任何主人都是有时间范围的
一个变量的主人内部所包含的所有语句
    叫做这个变量的作用域，只有变量
		作用域内部的语句才可以使用变量
		的名称
一个变量的存储区只有在它的主人存在
    期间才是可以使用的，这个时间范围
		叫做变量的生命周期。

主人是整个程序运行过程的变量是全局
    变量。这种变量的生命周期是整个
		程序运行期间，作用域包含程序中
		所有语句。没有初始化的全局变量
		会自动被初始化成0。
主人是某个函数运行过程的变量叫局部
    变量。
主人是某个函数内部某个大括号（语句块）
    的运行过程的变量叫做块变量

预习：
    1.重名变量的使用规则
		2.程序分段
		3.声明变量时可以使用的关键字
		4.指针变量

作业：
    1.编写递归函数完成数组中所有存储区
		内容的颠倒
		2.编程从person.bin文件中获得所有
		人的信息并打印在屏幕上


